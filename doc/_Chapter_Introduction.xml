<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Introduction">
<Heading>Introduction</Heading>

 Let <Math>\Omega</Math> be a set of cardinality <Math>d\in\mathbb{N}_{\ge 3}</Math> and let <Math>T_{d}=(V,E)</Math> be the <Math>d</Math>-regular tree. We follow Serre's graph theory notation <Cite Key="Ser80"/>. Given a subgroup <Math>H</Math> of the automorphism group <Math>\mathrm{Aut}(T_{d})</Math> of <Math>T_{d}</Math>, and a vertex <Math>x\in V</Math>, the stabilizer <Math>H_{x}</Math> of <Math>x</Math> in <Math>H</Math> induces a permutation group on the set <Math>E(x):=\{e\in E\mid o(e)=x\}</Math> of edges issuing from <Math>x</Math>. We say that <Math>H</Math> is locally "P" if for every <Math>x\in V</Math> said permutation group satisfies the property "P", e.g. being transitive, semiprimitive, quasiprimitive or <Math>2</Math>-transitive.
 In <Cite Key="BM00a"/>, Burger-Mozes develop a remarkable structure theory of closed, non-discrete, locally quasiprimitive subgroups of <Math>\mathrm{Aut}(T_{d})</Math>, which resembles the theory of semisimple Lie groups. They complement this structure theory with a particularly accessible class of subgroups of <Math>\mathrm{Aut}(T_{d})</Math> with prescribed local action: Given <Math>F\le\mathrm{Sym}(\Omega)</Math> their universal group <Math>\mathrm{U}(F)</Math> is closed in <Math>\mathrm{Aut}(T_{d})</Math>, vertex-transitive, compactly generated and locally permutation isomorphic to <Math>F</Math>. It is discrete if and only if <Math>F</Math> is semiregular. When <Math>F</Math> is transitive, <Math>\mathrm{U}(F)</Math> is maximal up to conjugation among vertex-transitive subgroups of <Math>\mathrm{Aut}(T_{d})</Math> that are locally permutation isomorphic to <Math>F</Math>, hence <E>universal</E>.
<P/>
 This construction was generalized by the second author in <Cite Key="Tor20"/>: In the spirit of <Math>k</Math>-closures of groups acting on trees developed in <Cite Key="BEW15"/>, we generalize the universal group construction by prescribing the local action on balls of a given radius <Math>k\in\mathbb{N}</Math>, the Burger-Mozes construction corresponding to the case <Math>k=1</Math>. Fix a tree <Math>B_{d,k}</Math> which is isomorphic to a ball of radius <Math>k</Math> in the labelled tree <Math>T_{d}</Math> and let <Math>l_{x}^{k}:B(x,k)\to B_{d,k}</Math> (<Math>x\in V</Math>) be the unique label-respecting isomorphism. Then <Display>\sigma_{k}:\mathrm{Aut}(T_{d})\times V\to\mathrm{Aut}(B_{d,k}),\ (g,x)\to l_{gx}^{k}\circ g\circ (l_{x}^{k})^{-1}</Display> captures the <E><Math>k</Math>-local action</E> of <Math>g</Math> at the vertex <Math>x\in V</Math>.
<P/>
 With this we can make the following defintition: Let <Math>F\!\le\!\mathrm{Aut}(B_{d,k})</Math>. Define <Display>\mathrm{U}_{k}(F):=\{g\in\mathrm{Aut}(T_{d})\mid \forall x\in V:\ \sigma_{k}(g,x)\in F\}.</Display>
<P/>
 While <Math>\mathrm{U}_{k}(F)</Math> is always closed, vertex-transitive and compactly generated, other properties of <Math>\mathrm{U}(F)</Math> do <E>not</E> carry over. Foremost, the group <Math>\mathrm{U}_{k}(F)</Math> need not be locally action isomorphic to <Math>F</Math> and we say that <Math>F\le\mathrm{Aut}(B_{d,k})</Math> satisfies condition (C) if it is. This can be viewed as an interchangeability condition on neighbouring local actions, see Section <Ref Sect="Section_condition_C"/>. There is also a discreteness condition (D) on <Math>F\le\mathrm{Aut}(B_{d,k})</Math> in terms of certain stabilizers in <Math>F</Math> under which <Math>\mathrm{U}_{k}(F)</Math> is discrete, see Section <Ref Sect="Section_condition_D"/>.
<P/>
 <Package>UGALY</Package> provides methods to create, analyse and find local actions <Math>F\le\mathrm{Aut}(B_{d,k})</Math> that satisfy condition (C) and/or (D), including the constructions <Math>\Gamma</Math>, <Math>\Delta</Math>, <Math>\Phi</Math>, <Math>\Sigma</Math>, and <Math>\Pi</Math> developed in <Cite Key="Tor20"/>. This package was developed within the <URL Text="Zero-Dimensional Symmetry Research Group"> https://zerodimensional.group/"</URL> in the <URL Text="School of Mathematical and Physical Sciences"> https://www.newcastle.edu.au/school/mathematical-and-physical-sciences</URL> at <URL Text="The University of Newcastle"> https://www.newcastle.edu.au/</URL> as part of a project course taken by the first author, supervised by the second author.
<Section Label="Chapter_Introduction_Section_Purpose">
<Heading>Purpose</Heading>

 <Package>UGALY</Package> serves both a research and an educational purpose. It consolidates a rudimentary codebase that was developed by the second author in the course of research undertaken towards the article <Cite Key="Tor20"/>. This codebase had been tremendously beneficial in achieving the results of <Cite Key="Tor20"/> in the first place and so there has always been a desire to make it available to a wider audience.
<P/>
 From a research perspective, <Package>UGALY</Package> introduces computational methods to the world of locally compact groups. Due to the Cayley-Abels graph construction <Cite Key="KM08"/>, groups acting on trees form a particularly significant class of totally disconnected locally compact groups. Burger-Mozes universal groups <Cite Key="BM00a"/> and their generalisations <Math>\mathrm{U}_{k}(F)</Math>, where <Math>F\le\mathrm{Aut}(B_{d,k})</Math> satisfies the compatibility condition (C), are among the most accessible of these groups and form a significant subclass: in fact, due to <Cite Key="Tor20" Where="Corollary 4.32"/>, the locally transitive, generalised universal groups are exactly the closed, locally transitive subgroups of <Math>\mathrm{Aut}(T_{d})</Math> that contain an inversion of order <Math>2</Math> and satisfy one of the independence properties <Math>(P_{k})</Math> (see <Cite Key="BEW15"/>) that generalise Tits' independence property <Math>(P)</Math>, see <Cite Key="Tit70"/>. <Package>UGALY</Package> provides the means to generate a library of all these groups in terms of their <Math>k</Math>-local action, and we envision to add such a library in a future version of this package. In the case <Math>k=1</Math> of classical Burger-Mozes groups, it coincides with the library of finite transitive permutation groups <Package>TransGrp</Package>. As another example, we obtain the following six groups for <Math>(d,k)=(3,2)</Math>.
<Example><![CDATA[
gap> A3:=LocalAction(3,1,TransitiveGroup(3,1));
A3
gap> S3:=LocalAction(3,1,TransitiveGroup(3,2));
S3
gap> A3_extn:=ConjugacyClassRepsCompatibleGroupsWithProjection(2,A3);
[ Group([ (1,4,5)(2,3,6) ]) ]
gap> S3_extn:=ConjugacyClassRepsCompatibleGroupsWithProjection(2,S3);
[ Group([ (1,2)(3,5)(4,6), (1,4,5)(2,3,6) ]), 
  Group([ (1,2)(3,4)(5,6), (1,2)(3,5)(4,6), (1,4,5)(2,3,6) ]), 
  Group([ (3,4)(5,6), (1,2)(3,4), (1,4,5)(2,3,6), (3,5,4,6) ]), 
  Group([ (3,4)(5,6), (1,2)(3,4), (1,4,5)(2,3,6), (3,5)(4,6) ]), 
  Group([ (3,4)(5,6), (1,2)(3,4), (1,4,5)(2,3,6), (5,6), (3,5,4,6) ]) ]
]]></Example>


 These groups have been identified to stem from certain general constructions much like there are families of finite transitive groups. See Chapter <Ref Chap="Chapter_ukf_examples"/> for the functions appearing below.
<Example><![CDATA[
gap> PHI(A3)=A3_extn[1];
true
gap> GAMMA(3,S3)=S3_extn[1];
true
gap> DELTA(3,S3)=S3_extn[2];
false
gap> IsConjugate(AutBall(3,2),DELTA(3,S3),S3_extn[2]);
true
gap> rho:=SignHomomorphism(S3);;
gap> PI(2,3,S3,rho,[0,1])=S3_extn[3];
true
gap> PI(2,3,S3,rho,[1])=S3_extn[4];
true
gap> PHI(S3)=S3_extn[5];
true
]]></Example>


 <Package>UGALY</Package> may also be a useful tool in the context of the Weiss conjecture <Cite Key="Wei78"/> which in particular states that there are only finitely many conjugacy classes of discrete, vertex-transitive and locally primitive subgroup of <Math>\mathrm{Aut}(T_{d})</Math>. When such a group contains an inversion of order <Math>2</Math>, it can be written as a universal group <Math>\mathrm{U}_{k}(F)</Math>, where <Math>F\le\mathrm{Aut}(B_{d,k})</Math> satisfies both the compatibility condition (C) and the discreteness condition (D), due to <Cite Key="Tor20" Where="Corollary 4.38"/>. Therefore, <Package>UGALY</Package> can be used to construct explicit examples of groups relevant to the Weiss conjecture. Their structure as well as patterns in their appearance may provide more insight into the conjecture and suggest directions of research. At the very least, <Package>UGALY</Package> provides lower bounds on their numbers. For example (<Math>d=4</Math>):
<Example><![CDATA[
gap> A4:=LocalAction(4,1,PrimitiveGroup(4,1));;
gap> S4:=LocalAction(4,1,PrimitiveGroup(4,2));;
gap> A4_extn:=ConjugacyClassRepsCompatibleGroupsWithProjection(2,A4);;
gap> Size(A4_extn); Size(Filtered(A4_extn,SatisfiesD));
5
2
gap> S4_extn:=ConjugacyClassRepsCompatibleGroupsWithProjection(2,S4);;
gap> Size(S4_extn); Size(Filtered(S4_extn,SatisfiesD));
13
3
]]></Example>


 Every subgroup <Math>F\le\mathrm{Aut}(B_{d,k})</Math> which satisfies both the compatibility condition (C) and the discreteness condition (D) admits an involutive compatibility cocycle (see <Cite Key="Tor20" Where="Section 3.2.2"/>), i.e. a map <Math>z:F\times\{1,\ldots,d\}\to F</Math> which satisfies certain properties reflecting the discreteness of the group <Math>\mathrm{U}_{k}(F)</Math>. It is intriguing that some groups <Math>F\le\mathrm{Aut}(B_{d,k})</Math> with these properties stem from groups <Math>F'\le\mathrm{Aut}(B_{d,k-1})</Math> that satisfy (C), admit an involutive compatibility cocycle <Math>z</Math> but do not satisfy (D), in the sense that <Math>F=\Gamma_{z}(F')</Math> (see <Cite Key="Tor20" Where="Proposition 3.26"/>), whereas others do not. For example, in the case <Math>d=3</Math>, five of the seven conjugacy classes of discrete, vertex-transitive and locally primitive subgroups of <Math>\mathrm{Aut}(T_{3})</Math> come from generalised universal groups. Of these five, three arise from groups <Math>F'</Math> as above while the remaining two do not, see <Cite Key="Tor20" Where="Example 4.39"/>.
<Example><![CDATA[
gap> S3:=SymmetricGroup(3);;
gap> rho:=SignHomomorphism(S3);;
gap> H:=PI(2,3,S3,rho,[1]);;
gap> [SatisfiesC(H), SatisfiesD(H), not InvolutiveCompatibilityCocycle(H)=fail];
[ true, false, true ]
gap> grps:=ConjugacyClassRepsCompatibleGroupsWithProjection(3,H);; Size(grps);
4
gap> Size(Filtered(grps,SatisfiesD));
2
gap> z:=InvolutiveCompatibilityCocycle(H);;
gap> Size(Intersection(GAMMA(H,z)^AutBall(3,3),grps));
1
]]></Example>


 The number of different involutive compatibility cocycles that a group <Math>F\le\mathrm{Aut}(B_{d,k})</Math> may admit is also mysterious, including in the case <Math>k=1</Math>.
<Example><![CDATA[
gap> grps:=AllTransitiveGroups(NrMovedPoints,4);
[ C(4) = 4, E(4) = 2[x]2, D(4), A4, S4 ]
gap> Apply(grps,H->Size(AllInvolutiveCompatibilityCocycles(LocalAction(4,1,H))));;
gap> grps;
[ 1, 1, 8, 28, 256 ]
]]></Example>


<P/>
 From an educational point of view, we envision that <Package>UGALY</Package> could be used to enhance the learning experience of students in the area of groups acting on trees. The class of generalised universal groups forms an ideal framework for this purpose. For example, to internalise the widely used concept of local actions it may be helpful to take a <Math>2</Math>-local action in the form of an automorphism of <Math>B_{3,2}</Math> (a rotation in the case below), decompose it into its <Math>1</Math>-local actions and recover the autorphism from them.
<Example><![CDATA[
gap> aut:=Random(AutBall(3,2));
(1,5,3,2,6,4)
gap> aut_center:=LocalAction(1,3,2,aut,[]);
(1,3,2)
gap> aut_1:=LocalAction(1,3,2,aut,[1]);
(1,3,2)
gap> aut_2:=LocalAction(1,3,2,aut,[2]);
(1,3,2)
gap> aut_3:=LocalAction(1,3,2,aut,[3]);
(2,3)
gap> AssembleAutomorphism(3,1,[aut_1,aut_2,aut_3]);
(1,5,3,2,6,4)
]]></Example>


 The computationally inclined student may also benefit from verifying existing theorems using <Package>UGALY</Package>. For example, one way to phrase a part of Tutte's work <Cite Key="Tut47"/> <Cite Key="Tut59"/> is to say that there are only three conjugacy classes of discrete, locally transitive subgroups of <Math>\mathrm{Aut}(T_{3})</Math> that contain an inversion of order <Math>2</Math> and are <Math>P_{2}</Math>-closed. Due to <Cite Key="Tor20" Where="Corollary 4.38"/>, this can be verified by checking that among all locally transitive subgroups of <Math>\mathrm{Aut}(B_{3,2})</Math> which satisfy the compatibility condition (C), only three also satisfy the discreteness condition (D).
<Example><![CDATA[
gap> A3:=LocalAction(3,1,TransitiveGroup(3,1));;
gap> S3:=LocalAction(3,1,TransitiveGroup(3,2));;
gap> A3_extn:=ConjugacyClassRepsCompatibleGroupsWithProjection(2,A3);
[ Group([ (1,4,5)(2,3,6) ]) ]
gap> S3_extn:=ConjugacyClassRepsCompatibleGroupsWithProjection(2,S3);
[ Group([ (1,2)(3,5)(4,6), (1,4,5)(2,3,6) ]), 
  Group([ (1,2)(3,4)(5,6), (1,2)(3,5)(4,6), (1,4,5)(2,3,6) ]), 
  Group([ (3,4)(5,6), (1,2)(3,4), (1,4,5)(2,3,6), (3,5,4,6) ]), 
  Group([ (3,4)(5,6), (1,2)(3,4), (1,4,5)(2,3,6), (3,5)(4,6) ]), 
  Group([ (3,4)(5,6), (1,2)(3,4), (1,4,5)(2,3,6), (5,6), (3,5,4,6) ]) ]
gap> Apply(A3_extn,SatisfiesD); A3_extn;
[ true ]
gap> Apply(S3_extn,SatisfiesD); S3_extn;
[ true, true, false, false, false ]
]]></Example>


 It may also be instructive to generate involutive compatibility cocycles computationally and check parts of the axioms manually.
<Example><![CDATA[
gap> S3:=SymmetricGroup(3);;
gap> rho:=SignHomomorphism(S3);;
gap> H:=PI(2,3,S3,rho,[1]);;
gap> z:=InvolutiveCompatibilityCocycle(H);;
gap> a:=Random(H); Image(z,[Image(z,[a,1]),1]);
(3,4)(5,6)
(3,4)(5,6)
]]></Example>


</Section>


</Chapter>

